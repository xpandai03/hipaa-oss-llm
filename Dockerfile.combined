# Combined Dockerfile for FastAPI + Ollama
# For fastest Render deployment

FROM ollama/ollama:latest

# Install Python and dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy application files
COPY requirements.txt .
COPY app.py .
COPY providers/ ./providers/
COPY tools/ ./tools/

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Create startup script
RUN echo '#!/bin/bash\n\
# Start Ollama in background\n\
ollama serve &\n\
OLLAMA_PID=$!\n\
\n\
# Wait for Ollama to be ready\n\
echo "Waiting for Ollama to start..."\n\
sleep 10\n\
\n\
# Pull the model if not exists\n\
echo "Pulling llama3.2 model..."\n\
ollama pull llama3.2 || true\n\
\n\
# Start FastAPI app on the PORT provided by Render\n\
echo "Starting FastAPI application on port ${PORT:-8000}..."\n\
uvicorn app:app --host 0.0.0.0 --port ${PORT:-8000}\n\
' > /app/start.sh && chmod +x /app/start.sh

# Expose both Ollama and FastAPI ports
EXPOSE 11434 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s \
  CMD curl -f http://localhost:8000/health || exit 1

# Run the startup script
CMD ["/app/start.sh"]